-- RE 13 -> Obter o numero total de clientes do ginasio
MATCH(c:Cliente)
RETURN count(*) AS NrClientes

-- RE 14 -> Verificar o numero de professores que lecionam no ginasio
MATCH(p:Professor)
RETURN count(*) AS NrProfessores

-- RE 15 -> Saber que professor leciona certa atividade fisica 
MATCH (p:Professor)-[r:Leciona]->(a:Atividade_Fitness{Nome:"Step"}) 
RETURN p.Nome AS Nome

-- RE 16 -> Conhecer a sala onde a atividade é lecionada
MATCH(a:Atividade_Fitness{IdAtividade:7})
RETURN a.Sala AS Sala

-- RE 17 -> Consultar os planos realizados por um dado cliente
MATCH(c:Cliente{Nome:"Ana Maria"})-[:Contem]->(p:Plano)
RETURN p.IdPlano AS Id, p.Preco AS Preco, p.DataInicio AS DataInicio, p.Estado AS Estado

-- RE 18 -> Identificar o Top 3 de clientes com maior número de planos associados
MATCH(c:Cliente)
WITH c, size((c)-[:Contem]->()) as NrPlanos
RETURN c.Nome AS Nome, NrPlanos
ORDER BY NrPlanos DESC
LIMIT 3

-- RE 19 -> Reconhecer o professor que lecionou mais atividades
MATCH(p:Professor)
WITH p, size((p)-[:Leciona]->()) as NrAtividades
RETURN p.Nome AS Nome, NrAtividades
ORDER BY NrAtividades DESC
LIMIT 1

-- RE 20 -> Obter o Top 3 das atividades com mais alunos inscritos
MATCH(a:Atividade_Fitness)
RETURN a.Nome AS Nome, a.NrInscritos AS NrInscritos
ORDER BY a.NrInscritos DESC
LIMIT 3

-- RE 21 -> Identificar o número de planos elaborados por cada professor
MATCH(p:Professor)
WITH p, size((p)-[:Elabora]->()) as NrPlanos
RETURN p.Nome AS Nome, NrPlanos
ORDER BY NrPlanos DESC

-- RE 22 -> Verificar o Top 3 dos alunos com maior número de aulas de uma determinada atividade fitness
MATCH(a:Atividade_Fitness{Nome:"Run"})-[:Possui]->(pa:Plano_Atividade_Fitness)-[:Contida]->(p:Plano)<-[:Contem]-(c:Cliente)
WITH c, sum(pa.NrAulas) as NrAulas
RETURN c.Nome AS Nome, NrAulas 
ORDER BY NrAulas DESC
LIMIT 3

-- RE 23 -> Atividade fitness mais frequentada por um determinado aluno
MATCH(a:Atividade_Fitness)-[:Possui]->(pa:Plano_Atividade_Fitness)-[:Contida]->(p:Plano)<-[:Contem]-(c:Cliente{Nome:"Carolina Pinto"})
WITH a, sum(pa.NrAulas) as NrAulas
RETURN a.Nome AS Nome, NrAulas
ORDER BY NrAulas DESC
LIMIT 1

-- RE 24 -> Devolver os planos elaborados por um professor ordenados pelo preço, bem como o cliente ao qual o plano foi atribuído
MATCH(p:Professor{Nome:"Andre Gonçalves"})-[:Elabora]->(pl:Plano)<-[:Contem]-(c:Cliente)
RETURN pl.Preco AS Preco, c.Nome AS Cliente
ORDER BY pl.Preco DESC

-- RE 25 -> Ver quais os planos que ja foram realizados por um dado cliente com determinado estado (ativo ou inativo)
MATCH(c:Cliente{Nome:"Marco Paulo"})-[:Contem]->(p:Plano{Estado:"Inativo"})
RETURN p.IdPlano AS Id, p.Preco AS Preco, p.DataInicio AS DataInicio
ORDER BY p.IdPlano

-- RE 26 -> As atividades fitness lecionadas por um professor
MATCH(p:Professor{Nome:"Andre Gonçalves"})-[:Leciona]->(a: Atividade_Fitness)
RETURN a.Nome AS Nome

-- RE 27 -> Nomes e contactos dos alunos que frequentam certa atividade
MATCH(t:Telemovel)<-[:Indica]-(c:Cliente)-[:Contem]->(p:Plano{Estado:"Ativo"})<-[:Contida]-(pa:Plano_Atividade_Fitness)<-[:Possui]-(a:Atividade_Fitness{Nome:"Cycling"})
RETURN c.Nome AS Nome, t.Numero AS Numero, t.Tipo AS Tipo

-- RE 28 -> Alunos de uma localidade
MATCH(c:Cliente)-[:Habita]->(l:Localidade{Nome:"Souto"})
RETURN c.Nome AS Nome
